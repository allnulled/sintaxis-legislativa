Ejecutable como documento HTML5
    con autor allnulled
    con nombre index
    con versión 1
<head>
    <title>🌐 SiLe | Editor</title>
    <meta charset="utf8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="lib/win7/win7.scoped.2.css" />
    <link rel="stylesheet" type="text/css" href="lib/codemirror/codemirror.css" />
    <script src="lib/calo/calo.js"></script>
    <script src="lib/codemirror/codemirror.js"></script>
    <script src="lib/sile/sile.js"></script>
    <style>
      .error_box {
        background-color: red;
        color: white;
        padding: 4px;
        cursor: pointer;
      }
    </style>
</head>
<body><div id="app"></div></body>.

### importo api nativa.

asigno window.PaginaDeInicio como un componente vue2 con nombre "PaginaDeInicio" con plantilla {
  <div class="PaginaDeInicio Component">
    <div class="window">
      <div class="title-bar">
        <div class="title-bar-text">
          🌐 SiLe | Editor
        </div>
      </div>
      <div class="window-body has-space">
        <textarea style="width: 100%;" ref="entrada_de_texto"></textarea>
        <button style="width:100%;" v-on:click="validarTexto">Validar</button>
        <div class="error_box" v-if="error" v-on:click="limpiarError">
          <div>Nombre: {{ error.name }}</div>
          <div v-if="error.location">
            <div>Localización: {{ error.location.start.offset }}-{{error.location.end.offset}}</div>
            <div>Localización: {{ error.location.start.line }}:{{error.location.start.column}}-{{ error.location.end.line }}:{{error.location.end.column}}</div>
            <div>Sugerencias: {{ JSON.stringify(error.expected, null, 2) }}</div>
          </div>
          <div>Mensaje: {{ error.message }}</div>
          <div>Pila: {{ error.stack }}</div>
        </div>
        <div class="success_box" v-if="ast && !error">
          <pre style="word-wrap: anywhere; white-space: pre-wrap;">{{ JSON.stringify(ast) }}</pre>
        </div>
      </div>
    </div>
  </div>
} con lógica {
  retorno {
    propiedad props como {
      propiedad root como {
        propiedad type como Object.
        propiedad required como true.
      }.
    }.
    método data donde {
      retorno {
        cmEntrada: undefined,
        ast: undefined,
        error: false
      }.
    }.
    propiedad methods como {
      método limpiarError donde {
        asigno this.error como false.
        hago this.$forceUpdate(true).
      }.
      método gestionarError con (error) donde {
        asigno this.error como error.
        hago this.$focreUpdate(true).
      }.
      método validarTexto donde {
        creo valorDeEntrada como this.cmEntrada.getValue().
        creo ast como this.$window.Sile_parser.parse(valorDeEntrada).
        asigno this.ast como ast.
      } en errores hago this.gestionarError(error).
    }.
    propiedad watch como {}.
    método beforeMount donde {}.
    método mounted donde {
      asigno this.cmEntrada como CodeMirror.fromTextArea(this.$refs.entrada_de_texto, {
        lineNumbers: true
      }).
    }.
  }.
}.

asigno window.App como una aplicación vue2 con nombre "App" con rutas [{
  propiedad path como "/".
  propiedad name como "PaginaDeInicio".
  propiedad component como PaginaDeInicio.
  propiedad props como {}.
}] con traducciones {
    propiedad es como {}.
    propiedad en como {}.
    propiedad ca como {}.
} con plantilla {
  <div class="App Component Castelog-app win7">
    <router-view :root="this"></router-view>
  </div>
} con estilos {
    html {}
    body {}
    .Component {}
    .App {}
} con lógica {
  retorno {
    método data donde {
      retorno {}.
    }.
    propiedad methods como {

    }.
    propiedad watch como {}.
    método beforeMount donde {
      asigno this.$window como window.
    }.
    método mounted donde {}.
  }.
} montada en "#app".